{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\LinkedIn-clone\\\\src\\\\components\\\\Body\\\\Feed\\\\Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Feed.css';\nimport CreateIcon from '@material-ui/icons/Create';\nimport ImageIcon from '@material-ui/icons/Image';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\nimport InputOption from './InputOption';\nimport Post from '../Post/Post';\nimport { db } from '../../../firebase';\nimport firebase from 'firebase';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../../../features/userSlice';\nimport FlipMove from 'react-flip-move';\n\nfunction Feed() {\n  _s();\n\n  const user = useSelector(selectUser);\n  const [input, setInput] = useState('');\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    db.collection(\"posts\").orderBy('timestamp', 'desc').onSnapshot(snapshot => setPosts(snapshot.docs.map(doc => ({\n      id: doc.id,\n      data: doc.data()\n    }))));\n  }, []);\n\n  const sendPost = e => {\n    e.preventDefault();\n    db.collection(\"posts\").add({\n      name: user.displayName,\n      description: user.email,\n      message: input,\n      photoUrl: user.photoUrl || '',\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed_inputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed_input\",\n        children: [/*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: input,\n            onChange: e => setInput(e.target.value),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendPost,\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed_inputOption\",\n        children: [/*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: ImageIcon,\n          title: \"Photo\",\n          color: \"#70b5f9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: SubscriptionsIcon,\n          title: \"Video\",\n          color: \"#7E7A33E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: EventNoteIcon,\n          title: \"Event\",\n          color: \"#C0CBCD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: CalendarViewDayIcon,\n          title: \"Write article\",\n          color: \"#7FC15E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlipMove, {\n      children: posts.map(({\n        id,\n        data: {\n          name,\n          description,\n          message,\n          photoUrl\n        }\n      }) => /*#__PURE__*/_jsxDEV(Post, {\n        name: name,\n        description: description,\n        message: message,\n        photoUrl: photoUrl\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Feed, \"K8dIafYe2x7cNy0bztNnfcYTiPQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = Feed;\n;\nexport default Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["D:/LinkedIn-clone/src/components/Body/Feed/Feed.js"],"names":["React","useEffect","useState","CreateIcon","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","InputOption","Post","db","firebase","useSelector","selectUser","FlipMove","Feed","user","input","setInput","posts","setPosts","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","sendPost","e","preventDefault","add","name","displayName","description","email","message","photoUrl","timestamp","firestore","FieldValue","serverTimestamp","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Feed.css';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\r\nimport InputOption from './InputOption';\r\nimport Post from '../Post/Post';\r\nimport { db } from '../../../firebase';\r\nimport firebase from 'firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../../../features/userSlice';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction Feed() {\r\n  const user = useSelector(selectUser);\r\n\r\n  const [input, setInput] = useState('');\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"posts\").orderBy('timestamp', 'desc').onSnapshot(snapshot => (\r\n      setPosts(snapshot.docs.map(doc => (\r\n        {\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }\r\n      )))\r\n    ))\r\n  }, [])\r\n  \r\n  const sendPost = e => {\r\n    e.preventDefault();\r\n\r\n    db.collection(\"posts\").add({\r\n      name: user.displayName,\r\n      description: user.email,\r\n      message: input,\r\n      photoUrl: user.photoUrl || '',\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"feed\">\r\n      <div className=\"feed_inputContainer\">\r\n        <div className=\"feed_input\">\r\n          <CreateIcon />\r\n          <form>\r\n            <input value={input} onChange={e => setInput(e.target.value)} type=\"text\" />\r\n            <button onClick={sendPost} type=\"submit\">Send</button>\r\n          </form>\r\n        </div>\r\n        <div className=\"feed_inputOption\">\r\n          <InputOption Icon={ImageIcon} title=\"Photo\" color=\"#70b5f9\" />\r\n          <InputOption Icon={SubscriptionsIcon} title=\"Video\" color=\"#7E7A33E\" />\r\n          <InputOption Icon={EventNoteIcon} title=\"Event\" color=\"#C0CBCD\" />\r\n          <InputOption Icon={CalendarViewDayIcon} title=\"Write article\" color=\"#7FC15E\" />\r\n        </div>\r\n      </div>\r\n\r\n      <FlipMove>\r\n        {posts.map(({ id, data: { name, description, message, photoUrl}}) => (\r\n          <Post \r\n            key={id}\r\n            name={name}\r\n            description={description}\r\n            message={message}\r\n            photoUrl={photoUrl}\r\n          />\r\n        ))}\r\n      </FlipMove>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n"]},"metadata":{},"sourceType":"module"}